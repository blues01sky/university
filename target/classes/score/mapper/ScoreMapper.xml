<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="score.mapper.ScoreMapper">
    <!-- 查询所有person -->  
    <select id="queryAll" resultType="Score" >  
        select * from score 
    </select>
    
    <select id="findBigSelves" resultType="Score" >  
        select * from score where minimum &gt; #{minscore} and minimum &lt; #{maxscore} 
        and year = #{todayyear} and department = #{department} and area = #{area} 
        order by average asc limit #{startnum},#{pagecount}
    </select>
    
     <select id="findBigSelvesCount" resultType="Integer" >  
        select count(*) from score where minimum &gt; #{minscore} and minimum &lt; #{maxscore} 
        and year = #{todayyear} and department = #{department} and area = #{area} 
   </select>
    
    <!-- 
    &lt;小于
    &gt;大于
     -->
    
    <select id="findScoreByUniversitynameAndAreaAndDepartmentYearDesc" resultType="Score">  
        select * from score where universityname = #{universityname} and area = #{area} and department = #{department} order by year desc
    </select>
    
    <select id="findScoreByUniversitynameDesc" parameterType="String" resultType="Score">  
        select * from score where universityname = #{universityname} order by year desc;
    </select>
    
    <select id="findScoreByAreaAndDepartmentYearDesc" parameterType="String" resultType="Score">  
        select * from score where area = #{area} and department = #{department} order by year desc;
    </select>
    
    <select id="findScoreBiggerThanMinimumAsc" parameterType="Integer" resultType="Score">  
        select * from score where minimum > #{minimum} order by minimum asc;
    </select>
    
    <select id="findScoreByAreaAndDepartmentBiggerThanMinimumAsc" resultType="Score">  
        select * from score where area = #{area} and department = #{department} and minimum > #{minimum} order by minimum asc;
    </select>
    
    <delete id="deleteByScoreName" parameterType="String">
    	delete from score where universityname = #{universityname}
    </delete>
    
    <delete id="deleteByScoreId" parameterType="Integer">
    	delete from score where id = #{id}
    </delete>
    
    <insert id="addScore">
    	insert into score(universityname,year,max,min,average,minimum,number,batch,department,area) 
    	values(#{universityname},#{year},#{max},#{min},#{average},#{minimum},#{number},#{batch},#{department},#{area})
    </insert>
    
    <update id="updateScoreById">
    	update score set universityname = #{universityname},year=#{year},max=#{max},min=#{min},average=#{average},minimum=#{minimum}
    	,number=#{number},batch=#{batch},department=#{department},area=#{area} where id = #{id}
    </update>
    
    <update id="updateScoreByUniversityname">
    	update score set year=#{year},max=#{max},min=#{min},average=#{average},minimum=#{minimum}
    	,number=#{number},batch=#{batch},department=#{department},area=#{area} where universityname = #{universityname}
    </update>
    
</mapper>